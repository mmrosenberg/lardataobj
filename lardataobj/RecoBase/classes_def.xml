<!--                                                                                  -->
<!--  $Author:  $                                                                     -->
<!--  $Date: 2010/04/12 18:12:28 $                                                    -->
<!--                                                                                  -->
<!--  Include art::Wrapper lines for objects that we would like to put into the event -->
<!--  Include the non-wrapper lines for all objects on the art::Wrapper lines and     -->
<!--  for all objects that are data members of those objects.                         -->


<lcgdict>
 <!-- support classes (e.g., elements of data product classes) -->
   <!-- for art association metadata -->
 <class name="std::vector<unsigned short>"                                />
   <!-- for lar::sparse_vector -->
 <class name="std::pair<unsigned int, std::vector<float> >"               />
 <class name="std::vector<std::pair<unsigned int, std::vector<float> > >" />
 <class name="lar::range_t<unsigned long>"                                />
 <class name="lar::sparse_vector<float>::datarange_t"                     />
 <class name="std::vector< lar::sparse_vector<float>::datarange_t >"      />
   <!-- others -->
 <class name="std::vector<TVector3>"                                      />
 <class name="std::vector<TMatrixT<double> >"                             />
 <class name="vector<ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag> >"/>
 <class name="vector<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<Double32_t>,ROOT::Math::GlobalCoordinateSystemTag> >"/>
   <!-- LArSoft structures -->
 <class name="geo::CryostatID"             ClassVersion="18"                   >
  <version ClassVersion="18" checksum="1964936896"/>
 </class>
 <class name="geo::TPCID"             ClassVersion="18"                   >
  <version ClassVersion="18" checksum="1559344023"/>
 </class>
 <class name="geo::PlaneID"             ClassVersion="3"                   >
  <version ClassVersion="3" checksum="4101905372"/>
  <version ClassVersion="2" checksum="1305837428"/>
 </class>
 <class name="geo::WireID"             ClassVersion="12"                   >
  <version ClassVersion="12" checksum="3525876646"/>
  <version ClassVersion="11" checksum="363582492"/>
 </class>
 <class name="lar::sparse_vector<float>"                                  />
 <enum name="geo::coordinates"                                            />
 <enum name="geo::_plane_proj"                                            />
 <enum name="geo::_plane_orient"                                          />
 <enum name="geo::_plane_sigtype"                                         />
 <enum name="geo::driftdir"                                               />

 
 <!-- data product classes -->
 <class name="recob::Cluster"          ClassVersion="16"                   >
  <version ClassVersion="16" checksum="1223880123"/>
  <version ClassVersion="15" checksum="3137006571"/>
  <version ClassVersion="14" checksum="2461492145"/>
  <version ClassVersion="13" checksum="3306685703"/>
  <version ClassVersion="12" checksum="1302402512"/>
 </class>
 <class name="recob::Edge"         ClassVersion="20"                       >
  <version ClassVersion="20" checksum="2649087970"/>
  <version ClassVersion="19" checksum="4224291429"/>
     <version ClassVersion="18" checksum="1452403705"/>
 </class>
 <class name="recob::Hit"              ClassVersion="16"                   >
  <version ClassVersion="16" checksum="3524685965"/>
  <version ClassVersion="15" checksum="3889929631"/>
  <version ClassVersion="14" checksum="1206393973"/>
  <version ClassVersion="13" checksum="2260253886"/>
 </class>
 <class name="recob::PCAxis"           ClassVersion="12"                   >
  <version ClassVersion="12" checksum="672048823"/>
  <version ClassVersion="11" checksum="2374757403"/>
 </class>
 <class name="recob::Shower"           ClassVersion="14"                   >
  <version ClassVersion="14" checksum="3539288154"/>
  <version ClassVersion="13" checksum="1829658282"/>
  <version ClassVersion="12" checksum="652922075"/>
  <version ClassVersion="11" checksum="1998712487"/>
 </class>
 <class name="recob::PFParticle"         ClassVersion="13"                 >
  <version ClassVersion="13" checksum="1452403705"/>
  <version ClassVersion="12" checksum="1065754987"/>
  <version ClassVersion="11" checksum="1332843380"/>
 </class>
 <class name="larpandoraobj::PFParticleMetadata" ClassVersion="12"                 >
  <version ClassVersion="12" checksum="3938357606"/>
  <version ClassVersion="11" checksum="42419696"/>
	<version ClassVersion="10" checksum="2600776094"/>
 </class>
 <class name="recob::Seed"             ClassVersion="12"                   >
  <version ClassVersion="12" checksum="435078304"/>
 </class>
 <class name="recob::EndPoint2D"       ClassVersion="14"                   >
  <version ClassVersion="14" checksum="2603357711"/>
  <version ClassVersion="13" checksum="595254911"/>
 </class>
 <class name="recob::Wire"             ClassVersion="19"                   >
  <version ClassVersion="19" checksum="1560514318"/>
  <version ClassVersion="18" checksum="2134690102"/>
  <version ClassVersion="17" checksum="4245857386"/>
  <version ClassVersion="16" checksum="2920613755"/>
  <version ClassVersion="15" checksum="1996069203"/>
  <version ClassVersion="14" checksum="421277707"/>
  <version ClassVersion="13" checksum="486905015"/>
 </class>
 <class name="recob::SpacePoint"       ClassVersion="13"                   >
  <version ClassVersion="13" checksum="905613236"/>
  <version ClassVersion="12" checksum="4256037352"/>
 </class>
 <class name="recob::Vertex"           ClassVersion="15"                   >
  <version ClassVersion="15" checksum="2961210270"/>
  <version ClassVersion="14" checksum="2896315066"/>
  <version ClassVersion="13" checksum="1229739518"/>
  <version ClassVersion="12" checksum="1317803878"/>
 </class>
 <class name="recob::Slice"            ClassVersion="15"                   >
  <version ClassVersion="15" checksum="1252584213"/>
  <version ClassVersion="14" checksum="2291287429"/>
  <version ClassVersion="13" checksum="2291287429"/>
  <version ClassVersion="12" checksum="2320421270"/>
 </class>
 <class name="recob::Event"            ClassVersion="11"                   >
  <version ClassVersion="11" checksum="4046040025"/>
 </class>
 <class name="recob::OpHit"            ClassVersion="14"                   >
  <version ClassVersion="14" checksum="3730974187"/>
 </class>
 <class name="recob::OpFlash"          ClassVersion="18"                   >
  <version ClassVersion="18" checksum="507533507"/>
  <version ClassVersion="17" checksum="1882235791"/>
 </class>
 <class name="recob::TrackFitHitInfo" ClassVersion="11"                   >
  <version ClassVersion="11" checksum="3489889540"/>
  <version ClassVersion="10" checksum="2600776094"/>
 </class>

 <class name="recob::MCSFitResult" ClassVersion="11"                   >
  <version ClassVersion="11" checksum="2801205803"/>
  <version ClassVersion="10" checksum="1923850317"/>
 </class>

 <class name="recob::VertexAssnMeta" ClassVersion="10"                   >
  <version ClassVersion="10" checksum="135721609"/>
 </class>

 <!-- art pointers and pointer vectors -->
 <class name="art::Ptr<recob::Edge>"                            />
 <class name="art::Ptr<recob::Hit>"                             />
 <class name="art::Ptr<recob::Cluster>"                         />
 <class name="art::Ptr<recob::PCAxis>"                          />
 <class name="art::Ptr<recob::PFParticle>"                      />
 <class name="art::Ptr<larpandoraobj::PFParticleMetadata>"      />
 <class name="art::Ptr<recob::Seed>"                            />
 <class name="art::Ptr<recob::Shower>"                          />
 <class name="art::Ptr<recob::SpacePoint>"                      />
 <class name="art::Ptr<recob::Slice>"                           />
 <class name="art::Ptr<recob::Event>"                           />
 <class name="art::Ptr<recob::Vertex>"                          />
 <class name="art::Ptr<recob::OpHit>"                           />
 <class name="art::Ptr<recob::OpFlash>"                         />
 <class name="art::PtrVector<recob::Edge>"                      />
 <class name="art::Ptr<recob::TrackFitHitInfo>"                 />
 <class name="art::Ptr<recob::MCSFitResult>"                    />
 <class name="art::Ptr<recob::VertexAssnMeta>" />
 <class name="art::PtrVector<recob::Hit>"                       />
 <class name="art::PtrVector<recob::Slice>"                     />
 <class name="art::PtrVector<recob::Event>"                     />
 <class name="art::PtrVector<recob::Cluster>"                   />
 <class name="art::PtrVector<recob::PCAxis>"                    />
 <class name="art::PtrVector<recob::PFParticle>"                />
 <class name="art::PtrVector<recob::Seed>"                      />
 <class name="art::PtrVector<recob::Shower>"                    />
 <class name="art::PtrVector<recob::SpacePoint>"                />
 <class name="art::PtrVector<recob::Vertex>"                    />
 <class name="art::PtrVector<recob::OpHit>"                     />
 <class name="art::PtrVector<recob::OpFlash>"                   />
 <class name="art::PtrVector<recob::TrackFitHitInfo>"           />
 <class name="art::PtrVector<recob::MCSFitResult>"              />
 <class name="std::vector< art::PtrVector<recob::SpacePoint> >" />
 <class name="std::vector< art::PtrVector<recob::Cluster> >"    />
 <class name="std::vector< art::PtrVector<recob::TrackFitHitInfo> >" />
 
 <!-- pairs and tuples for associations -->
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::EndPoint2D> >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::Cluster>,    art::Ptr<recob::Slice>      >" />
 <class name="std::pair< art::Ptr<recob::Edge>,       art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Edge>,       art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::EndPoint2D>, art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::EndPoint2D>, art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::Slice>,      art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::Event>,      art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Event>,      art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::EndPoint2D> >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Slice>      >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::Slice>      >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Event>      >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Seed>       >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::Hit>,        art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::PCAxis>,     art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::PCAxis>,     art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Edge>       >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::PCAxis>     >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<larpandoraobj::PFParticleMetadata>     >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Seed>       >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::PFParticle>, art::Ptr<recob::Slice>      >" />
 <class name="std::pair< art::Ptr<larpandoraobj::PFParticleMetadata>, art::Ptr<recob::PFParticle>     >" />
 <class name="std::pair< art::Ptr<recob::Seed>,       art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Seed>,       art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::PCAxis>     >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::SpacePoint> >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::Vertex>     >" />
 <class name="std::pair< art::Ptr<recob::Shower>,     art::Ptr<recob::Slice>      >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::Edge>       >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::SpacePoint>, art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::Cluster>    >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::Event>      >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::Hit>        >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::PFParticle> >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::Shower>     >" />
 <class name="std::pair< art::Ptr<recob::Vertex>,     art::Ptr<recob::Slice>      >" />
 
 <!-- associations -->
 <class name="art::Assns<raw::RawDigit,     recob::Hit,        void          >" />
 <class name="art::Assns<raw::RawDigit,     recob::Wire,       void          >" />
 <class name="art::Assns<recob::Cluster,    recob::EndPoint2D, void          >" />
 <class name="art::Assns<recob::Cluster,    recob::EndPoint2D, unsigned short>" />
 <class name="art::Assns<recob::Cluster,    recob::Hit,        void          >" />
 <class name="art::Assns<recob::Cluster,    recob::PFParticle, void          >" />
 <class name="art::Assns<recob::Cluster,    recob::Shower,     void          >" />
 <class name="art::Assns<recob::Cluster,    recob::SpacePoint, void          >" />
 <class name="art::Assns<recob::Cluster,    recob::Vertex,     void          >" />
 <class name="art::Assns<recob::Cluster,    recob::Vertex,     unsigned short>" />
 <class name="art::Assns<recob::Cluster,    recob::Slice,      void          >" />
 <class name="art::Assns<recob::Edge,       recob::PFParticle, void>"           />
 <class name="art::Assns<recob::Edge,       recob::SpacePoint, void>"           />
 <class name="art::Assns<recob::EndPoint2D, recob::Hit,        void>"           />
 <class name="art::Assns<recob::EndPoint2D, recob::Cluster,    void>"           />
 <class name="art::Assns<recob::EndPoint2D, recob::Cluster,    unsigned short>" />
 <class name="art::Assns<recob::Slice,      recob::Hit,        void          >" />
 <class name="art::Assns<recob::Slice,      recob::SpacePoint, void          >" />
 <class name="art::Assns<recob::Slice,      recob::PFParticle, void          >" />
 <class name="art::Assns<recob::Slice,      recob::Cluster,    void          >" />
 <class name="art::Assns<recob::Slice,      recob::Shower,     void          >" />
 <class name="art::Assns<recob::Slice,      recob::Vertex,     void          >" />
 <class name="art::Assns<recob::Event,      recob::Hit,        void          >" />
 <class name="art::Assns<recob::Event,      recob::Vertex,     void          >" />
 <class name="art::Assns<recob::Hit,        raw::RawDigit,     void          >" />
 <class name="art::Assns<recob::Hit,        recob::Cluster,    void          >" />
 <class name="art::Assns<recob::Hit,        recob::EndPoint2D, void          >" />
 <class name="art::Assns<recob::Hit,        recob::Slice,      void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::Slice,      void          >" />
 <class name="art::Assns<recob::Hit,        recob::Event,      void          >" />
 <class name="art::Assns<recob::Hit,        recob::Seed,       void          >" />
 <class name="art::Assns<recob::Hit,        recob::Shower,     void          >" />
 <class name="art::Assns<recob::Hit,        recob::SpacePoint, void          >" />
 <class name="art::Assns<recob::Hit,        recob::Vertex,     void          >" />
 <class name="art::Assns<recob::Hit,        recob::Wire,       void          >" />
 <class name="art::Assns<recob::PCAxis,     recob::PFParticle, void          >" />
 <class name="art::Assns<recob::PCAxis,     recob::Shower,     void>"           />
 <class name="art::Assns<recob::PFParticle, recob::Cluster,    void          >" />
 <class name="art::Assns<recob::PFParticle, recob::Edge,       void          >" />
 <class name="art::Assns<recob::PFParticle, recob::PCAxis,     void          >" />
 <class name="art::Assns<recob::PFParticle, larpandoraobj::PFParticleMetadata, void  >" />
 <class name="art::Assns<recob::PFParticle, recob::Seed,       void          >" />
 <class name="art::Assns<recob::PFParticle, recob::Shower,     void          >" />
 <class name="art::Assns<recob::PFParticle, recob::SpacePoint, void          >" />
 <class name="art::Assns<recob::PFParticle, recob::Vertex,     void          >" />
 <class name="art::Assns<recob::PFParticle, recob::Slice,      void          >" />
 <class name="art::Assns<larpandoraobj::PFParticleMetadata, recob::PFParticle, void  >" />
 <class name="art::Assns<recob::Seed,       recob::Hit,        void          >" />
 <class name="art::Assns<recob::Seed,       recob::PFParticle, void          >" />
 <class name="art::Assns<recob::Shower,     recob::Cluster,    void          >" />
 <class name="art::Assns<recob::Shower,     recob::Hit,        void          >" />
 <class name="art::Assns<recob::Shower,     recob::PCAxis,     void>"           />
 <class name="art::Assns<recob::Shower,     recob::PFParticle, void          >" />
 <class name="art::Assns<recob::Shower,     recob::SpacePoint, void          >" />
 <class name="art::Assns<recob::Shower,     recob::Vertex,     void          >" />
 <class name="art::Assns<recob::Shower,     recob::Slice,      void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::Edge,       void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::Hit,        void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::Cluster,    void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::PFParticle, void          >" />
 <class name="art::Assns<recob::SpacePoint, recob::Shower,     void          >" />
 <class name="art::Assns<recob::OpFlash,    recob::OpHit,      void          >" />
 <class name="art::Assns<recob::OpFlash,    recob::Track,      void          >" />
 <class name="art::Assns<recob::OpFlash,    recob::Trajectory, void          >" />
 <class name="art::Assns<recob::OpFlash,    recob::Cluster,    void          >" />
 <class name="art::Assns<recob::OpHit,      recob::OpFlash,    void          >" />
 <class name="art::Assns<recob::Track,      recob::OpFlash,    void          >" />
 <class name="art::Assns<recob::Trajectory, recob::OpFlash,    void          >" />
 <class name="art::Assns<recob::Cluster,    recob::OpFlash,    void          >" />
 <class name="art::Assns<recob::Vertex,     recob::Cluster,    void          >" />
 <class name="art::Assns<recob::Vertex,     recob::Cluster,    unsigned short>" />
 <class name="art::Assns<recob::Vertex,     recob::Event,      void          >" />
 <class name="art::Assns<recob::Vertex,     recob::Hit,        void          >" />
 <class name="art::Assns<recob::Vertex,     recob::PFParticle, void          >" />
 <class name="art::Assns<recob::Vertex,     recob::Shower,     void          >" />
 <class name="art::Assns<recob::Vertex,     recob::Slice,      void          >" />
 <class name="art::Assns<recob::Wire,       raw::RawDigit,     void          >" />
 <class name="art::Assns<recob::Wire,       recob::Hit,        void          >" />
 <class name="art::Assns<recob::Vertex, recob::Track, recob::VertexAssnMeta>" />
 <class name="art::Assns<recob::Track, recob::Vertex, recob::VertexAssnMeta>" />
 
 <!-- vectors for data products -->
 <class name="std::vector<recob::Cluster>"    />
 <class name="std::vector<recob::Edge>"       />
 <class name="std::vector<recob::Hit>"        />
 <class name="std::vector<recob::PCAxis>"     />
 <class name="std::vector<recob::PFParticle>" />
 <class name="std::vector<larpandoraobj::PFParticleMetadata>" />
 <class name="std::vector<recob::Seed>"       />
 <class name="std::vector<recob::Shower>"     />
 <class name="std::vector<recob::EndPoint2D>" />
 <class name="std::vector<recob::Wire>"       />
 <class name="std::vector<recob::SpacePoint>" />
 <class name="std::vector<recob::Vertex>"     />
 <class name="std::vector<recob::Slice>"      />
 <class name="std::vector<recob::Event>"      />
 <class name="std::vector<recob::OpHit>"      />
 <class name="std::vector<recob::OpFlash>"    />
 <class name="std::vector<recob::MCSFitResult>"    />
 <class name="std::vector<recob::TrackFitHitInfo>" />
 <class name="std::vector<std::vector<recob::TrackFitHitInfo> >" />
 <class name="std::vector<recob::VertexAssnMeta>" />
 
 <!-- art data product wrappers -->
 <class name="art::Wrapper< std::vector< recob::Cluster                     > >" />
 <class name="art::Wrapper< std::vector< recob::Edge                        > >" />
 <class name="art::Wrapper< std::vector< recob::Hit                         > >" />
 <class name="art::Wrapper< std::vector< recob::PCAxis                      > >" />
 <class name="art::Wrapper< std::vector< recob::PFParticle                  > >" />
 <class name="art::Wrapper< std::vector< larpandoraobj::PFParticleMetadata  > >" />
 <class name="art::Wrapper< std::vector< recob::Seed                        > >" />
 <class name="art::Wrapper< std::vector< recob::Shower                      > >" />
 <class name="art::Wrapper< std::vector< recob::EndPoint2D                  > >" />
 <class name="art::Wrapper< std::vector< recob::Wire                        > >" />
 <class name="art::Wrapper< std::vector< recob::SpacePoint                  > >" />
 <class name="art::Wrapper< std::vector< recob::Vertex                      > >" />
 <class name="art::Wrapper< std::vector< recob::Slice                       > >" />
 <class name="art::Wrapper< std::vector< recob::Event                       > >" />
 <class name="art::Wrapper< std::vector< recob::OpHit                       > >" />
 <class name="art::Wrapper< std::vector< recob::OpFlash                     > >" />
 <class name="art::Wrapper< std::vector< recob::MCSFitResult                > >" />
 <class name="art::Wrapper< std::vector< art::PtrVector<recob::SpacePoint>   > >" />
 <class name="art::Wrapper< std::vector< art::PtrVector<recob::Cluster>      > >" />
 <class name="art::Wrapper< std::vector< std::vector<recob::TrackFitHitInfo> > >" />

 <!-- art association wrappers -->
 <class name="art::Wrapper< art::Assns<raw::RawDigit,     recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<raw::RawDigit,     recob::Wire,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::EndPoint2D, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::EndPoint2D, unsigned short> >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::Vertex,     unsigned short> >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Edge,       recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Edge,       recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::EndPoint2D, recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::EndPoint2D, recob::Cluster,    unsigned short> >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Slice,      recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Event,      recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Event,      recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        raw::RawDigit,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::EndPoint2D, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Event,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Seed,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Hit,        recob::Wire,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PCAxis,     recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PCAxis,     recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Edge,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::PCAxis,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Seed,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::PFParticle, larpandoraobj::PFParticleMetadata, void  > >" />
 <class name="art::Wrapper< art::Assns<larpandoraobj::PFParticleMetadata, recob::PFParticle, void  > >" />
 <class name="art::Wrapper< art::Assns<recob::Seed,       recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Seed,       recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::PCAxis,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::SpacePoint, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::Vertex,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Shower,     recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::Edge,       void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::SpacePoint, recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::OpFlash,    recob::OpHit,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::OpFlash,    recob::Track,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::OpFlash,    recob::Trajectory, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::OpFlash,    recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::OpHit,      recob::OpFlash,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Track,      recob::OpFlash,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Trajectory, recob::OpFlash,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Cluster,    recob::OpFlash,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Cluster,    void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Cluster,    unsigned short> >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Event,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::PFParticle, void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Shower,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Slice,      void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Wire,       raw::RawDigit,     void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Wire,       recob::Hit,        void          > >" />
 <class name="art::Wrapper< art::Assns<recob::Vertex,     recob::Track,      recob::VertexAssnMeta>>" />
 <class name="art::Wrapper< art::Assns<recob::Track,      recob::Vertex,     recob::VertexAssnMeta>>" />

<!-- <ioread 
    version="[-11]" 
    sourceClass="recob::Wire" 
    source="std::vector<double> fSignal" 
    targetClass="recob::Wire" 
    target="fSignal" 
    include="algorithm;vector;iterator;Wire.h">
    <![CDATA[
       fSignal.reserve(onfile.fSignal.size());
       std::copy(onfile.fSignal.begin(), onfile.fSignal.end(), std::back_inserter(fSignal));]]>
 </ioread> 
-->

 <!-- 
   Defined in classes_def_tracking.xml:
   recob::Trajectory
   recob::TrackTrajectory
   recob::Track
   recob::TrajectoryPointFlags
   recob::TrackHitMeta
   -->
  <!-- The following content is going to be moved in a new XML file for maintainability. -->
  <!-- START OF classes_def_tracking.xml CONTENT -->
<!--
  classes_def_tracking.xml
  
  Collection of objects which need a dictionary created, for serialisation.
  
  
  Include art::Wrapper lines for objects that we would like to put into the
  event.
  Include the non-wrapper lines for all objects on the art::Wrapper lines and
  for all objects that are data members of those objects.
  
  Some copy&paste templates are at the bottom.
  
  -->


<!-- lcgdict FIXME uncomment when moving to classes_def_tracking.xml -->
  <!-- a few copy&paste templates are at the bottom -->
  
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- recob::Trajectory -->
  
  <!--   class -->
  <class name="recob::Trajectory" ClassVersion="12" >
   <version ClassVersion="12" checksum="3480475097"/>
   <version ClassVersion="11" checksum="2541107521"/>
   <version ClassVersion="10" checksum="3286658271"/>
  </class>
  
    <!-- schema evolution rules -->
      <!-- version 12 -->
        <!-- * positions -->
  <ioread
    version="[11]"
    sourceClass="recob::Trajectory"
    source="std::vector<ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::GlobalCoordinateSystemTag>> fPositions;"
    targetClass="recob::Trajectory"
    target="fPositions"
    include="Math/GenVector/CoordinateSystemTags.h;Math/GenVector/Cartesian3D.h;Math/GenVector/PositionVector3D.h">
    <![CDATA[
      fPositions.clear();
      fPositions.reserve(onfile.fPositions.size());
      for (auto const& point: onfile.fPositions)
        fPositions.emplace_back(point.X(), point.Y(), point.Z());
    ]]>
  </ioread>
        <!-- * momenta -->
  <ioread
    version="[11]"
    sourceClass="recob::Trajectory"
    source="std::vector<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::GlobalCoordinateSystemTag>> fMomenta;"
    targetClass="recob::Trajectory"
    target="fMomenta"
    include="Math/GenVector/CoordinateSystemTags.h;Math/GenVector/Cartesian3D.h;Math/GenVector/DisplacementVector3D.h">
    <![CDATA[
      fMomenta.clear();
      fMomenta.reserve(onfile.fMomenta.size());
      for (auto const& mom: onfile.fMomenta)
        fMomenta.emplace_back(mom.X(), mom.Y(), mom.Z());
    ]]>
  </ioread>

      <!-- version 11 -->
        <!-- * positions -->
  <ioread 
    version="[-10]" 
    sourceClass="recob::Trajectory"
    source="std::vector<ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>> fPositions;"
    targetClass="recob::Trajectory"
    target="fPositions"
    include="Math/GenVector/CoordinateSystemTags.h;Math/GenVector/Cartesian3D.h;Math/GenVector/PositionVector3D.h">
    <![CDATA[
      fPositions.clear();
      fPositions.reserve(onfile.fPositions.size());
      for (auto const& point: onfile.fPositions)
        fPositions.emplace_back(point.X(), point.Y(), point.Z());
    ]]>
  </ioread> 
        <!-- * momenta -->
  <ioread 
    version="[-10]" 
    sourceClass="recob::Trajectory"
    source="std::vector<ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>, ROOT::Math::DefaultCoordinateSystemTag>> fMomenta;"
    targetClass="recob::Trajectory"
    target="fMomenta"
    include="Math/GenVector/CoordinateSystemTags.h;Math/GenVector/Cartesian3D.h;Math/GenVector/DisplacementVector3D.h">
    <![CDATA[
      fMomenta.clear();
      fMomenta.reserve(onfile.fMomenta.size());
      for (auto const& mom: onfile.fMomenta)
        fMomenta.emplace_back(mom.X(), mom.Y(), mom.Z());
    ]]>
  </ioread> 
  
    <!-- art pointers and wrappers -->
  <class name="art::Ptr<recob::Trajectory>" />
  <class name="std::vector<recob::Trajectory>" />
  <class name="art::Wrapper<std::vector<recob::Trajectory>>" />
  
    <!-- associations and wrappers -->
      <!-- hits -->
  <class name="art::Assns<recob::Hit, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::Hit, void>" />
  <class name="std::pair<art::Ptr<recob::Hit>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Hit, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::Hit>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::Hit, void>>" />
      <!-- clusters -->
  <class name="art::Assns<recob::Cluster, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::Cluster, void>" />
  <class name="std::pair<art::Ptr<recob::Cluster>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Cluster, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::Cluster>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::Cluster, void>>" />
      <!-- tracks -->
  <class name="art::Assns<recob::Track, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::Track, void>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::Track, void>>" />
      <!-- showers -->
  <class name="art::Assns<recob::Shower, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::Shower, void>" />
  <class name="std::pair<art::Ptr<recob::Shower>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Shower, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::Shower>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::Shower, void>>" />
      <!-- vertex -->
  <class name="art::Assns<recob::Vertex, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::Vertex, void>" />
  <class name="std::pair<art::Ptr<recob::Vertex>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Vertex, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::Vertex>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::Vertex, void>>" />
      <!-- space point -->
  <class name="art::Assns<recob::SpacePoint, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::SpacePoint, void>" />
  <class name="std::pair<art::Ptr<recob::SpacePoint>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::SpacePoint, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::SpacePoint>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::SpacePoint, void>>" />
      <!-- particle flow -->
  <class name="art::Assns<recob::PFParticle, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::PFParticle, void>" />
  <class name="std::pair<art::Ptr<recob::PFParticle>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::PFParticle, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::PFParticle>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::PFParticle, void>>" />
      <!-- multiple coulomb scattering -->
  <class name="art::Assns<recob::MCSFitResult, recob::Trajectory, void>" />
  <class name="art::Assns<recob::Trajectory, recob::MCSFitResult, void>" />
  <class name="std::pair<art::Ptr<recob::MCSFitResult>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::MCSFitResult, recob::Trajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::MCSFitResult>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::MCSFitResult, void>>" />
  
  
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- recob::TrackTrajectory -->
  <!--   dependencies -->
  <class name="recob::TrajectoryPointFlagTraits" />
  <class name="recob::TrajectoryPointFlags" />
  <class name="std::vector<recob::TrajectoryPointFlags>" />
  <class name="util::flags::Bits_t<unsigned int>" />
  <class name="util::flags::BitMask<unsigned int>" />
  <class name="util::flags::FlagSet<32U, unsigned int>" />
  
  <!--   class -->
  <class name="recob::TrackTrajectory" ClassVersion="11" >
   <version ClassVersion="11" checksum="239891311"/>
   <version ClassVersion="10" checksum="4198737063"/>
  </class>
  
    <!-- art pointers and wrappers -->
  <class name="art::Ptr<recob::TrackTrajectory>" />
  <class name="std::vector<recob::TrackTrajectory>" />
  <class name="art::Wrapper<std::vector<recob::TrackTrajectory>>" />
  
    <!-- associations and wrappers -->
      <!-- hits -->
  <class name="art::Assns<recob::Hit, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Hit, void>" />
  <class name="std::pair<art::Ptr<recob::Hit>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Hit, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Hit>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Hit, void>>" />
      <!-- clusters -->
  <class name="art::Assns<recob::Cluster, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Cluster, void>" />
  <class name="std::pair<art::Ptr<recob::Cluster>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Cluster, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Cluster>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Cluster, void>>" />
      <!-- trajectories -->
  <class name="art::Assns<recob::Trajectory, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Trajectory, void>" />
  <class name="std::pair<art::Ptr<recob::Trajectory>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Trajectory, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Trajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Trajectory, void>>" />
      <!-- tracks -->
  <class name="art::Assns<recob::Track, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Track, void>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Track, void>>" />
      <!-- showers -->
  <class name="art::Assns<recob::Shower, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Shower, void>" />
  <class name="std::pair<art::Ptr<recob::Shower>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Shower, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Shower>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Shower, void>>" />
      <!-- vertex -->
  <class name="art::Assns<recob::Vertex, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::Vertex, void>" />
  <class name="std::pair<art::Ptr<recob::Vertex>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::Vertex, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::Vertex>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::Vertex, void>>" />
      <!-- space point -->
  <class name="art::Assns<recob::SpacePoint, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::SpacePoint, void>" />
  <class name="std::pair<art::Ptr<recob::SpacePoint>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::SpacePoint, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::SpacePoint>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::SpacePoint, void>>" />
      <!-- particle flow -->
  <class name="art::Assns<recob::PFParticle, recob::TrackTrajectory, void>" />
  <class name="art::Assns<recob::TrackTrajectory, recob::PFParticle, void>" />
  <class name="std::pair<art::Ptr<recob::PFParticle>, art::Ptr<recob::TrackTrajectory>>" />
  <class name="art::Wrapper<art::Assns<recob::PFParticle, recob::TrackTrajectory, void>>" />
  <class name="std::pair<art::Ptr<recob::TrackTrajectory>, art::Ptr<recob::PFParticle>>" />
  <class name="art::Wrapper<art::Assns<recob::TrackTrajectory, recob::PFParticle, void>>" />
  
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- recob::Track -->
    <!-- dependencies -->
  
    <!-- class -->
  <class name="recob::Track"            ClassVersion="17"                   >
   <version ClassVersion="17" checksum="738708267"/>
   <version ClassVersion="16" checksum="1293628079"/>
   <version ClassVersion="15" checksum="2420564911"/>
    <version ClassVersion="14" checksum="2345363916"/>
  </class>
  
    <!-- schema evolution rules -->
      <!-- version 16 -->
        <!-- * covariance at start -->
  <ioread
    version="[15]"
    sourceClass="recob::Track"
    source="ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > fCovVertex;"
    targetClass="recob::Track"
    target="fCovVertex"
    include="lardataobj/RecoBase/Track.h">
    <![CDATA[
       for (size_t i=0; i<5; ++i)
         for (size_t j=0; j<5; ++j)
	   fCovVertex(i,j) = onfile.fCovVertex(i,j);
    ]]>
  </ioread>
        <!-- * covariance at end -->
  <ioread
    version="[15]"
    sourceClass="recob::Track"
    source="ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > fCovEnd;"
    targetClass="recob::Track"
    target="fCovEnd"
    include="lardataobj/RecoBase/Track.h">
    <![CDATA[
       for (size_t i=0; i<5; ++i)
         for (size_t j=0; j<5; ++j)
	   fCovEnd(i,j) = onfile.fCovEnd(i,j);
    ]]>
  </ioread>

      <!-- version 15 -->
        <!-- * trajectory -->
  <ioread 
    version="[-14]" 
    sourceClass="recob::Track"
    source="std::vector<TVector3> fXYZ; std::vector<TVector3> fDir; std::vector<double> fFitMomentum"
    targetClass="recob::Track"
    target="fTraj"
    include="lardataobj/RecoBase/Track.h;TVector3.h;vector;stdexcept">
    <![CDATA[
      // also uses "larcoreobj/SimpleTypesAndConstants/PhysicalConstants.h" // util::kBogusD

      // trajectory 
      if((onfile.fXYZ.size() != onfile.fDir.size()) || onfile.fXYZ.size()<2) {
         std::cerr
	 << "\n *** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
	 << "\n **** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
	 << "\n *** "
	 << "\n ***  ERROR!! ROOT I/O failure. "
	 << "\n ***  Trying to read from file a recob::Track with only " << onfile.fXYZ.size() << " points. "
	 << "\n ***  The data product containing this track is UNUSABLE. "
	 << "\n ***  In case of questions contact cerati@fnal.gov and petrillo@fnal.gov. "
	 << "\n ***  (printed from: lardataobj/RecoBase/classes_def.xml) "
	 << "\n *** "
	 << "\n **** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
	 << "\n *** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * "
	 << "\n" << std::endl;
        throw std::runtime_error(
          "Direction and position vector size mismatch during import of Track v. <=14"
          );
      }
      
      // prepare vector of positions
      recob::Track::Positions_t pos;
      pos.reserve(onfile.fXYZ.size());
      for (auto const& p: onfile.fXYZ)
        pos.emplace_back(p.X(), p.Y(), p.Z());
      
      // prepare vector of directions
      recob::Track::Momenta_t mom;
      mom.reserve(onfile.fDir.size());
      for (auto const& d: onfile.fDir)
        mom.emplace_back(d.X(), d.Y(), d.Z());
      
      // upgrade to momentum if the input track has exactly two momenta,
      // or if it has exactly the number of momenta required
      auto const size = mom.size();
      bool hasMom = false;
      if ((onfile.fFitMomentum.size() == 2)
        && (onfile.fFitMomentum[0] != util::kBogusD)
        && (onfile.fFitMomentum[1]!=util::kBogusD)
        )
      {
        hasMom = true;
        for (unsigned int i = 0; i < (size - 1); ++i)
          mom[i] *= onfile.fFitMomentum[0];
        mom.back() *= onfile.fFitMomentum[1];
      }
      else if (onfile.fFitMomentum.size() == size) {
        hasMom = true;
        for (unsigned int i = 0; i < size; ++i)
          mom[i] *= onfile.fFitMomentum[i];
      }
      
      // reinitialise the trajectory data member
      fTraj = recob::TrackTrajectory(
        std::move(pos), std::move(mom),
        recob::TrackTrajectory::Flags_t(size),
        hasMom
        );
    ]]>
  </ioread> 
        <!-- * covariance at start -->
  <ioread 
    version="[-14]" 
    sourceClass="recob::Track"
    source="std::vector<TMatrixD> fCov"
    targetClass="recob::Track"
    target="fCovVertex"
    include="lardataobj/RecoBase/Track.h;TMatrixD.h">
    <![CDATA[
      if (onfile.fCov.size() == 2) {
        // we copy the upper triangle only
        for (unsigned int i = 0; i < 5; ++i) {
          for (unsigned int j = i; j < 5; ++j) {
            fCovVertex(i,j) = onfile.fCov[0](i,j);
          } // for j
        } // for i
      } // if
    ]]>
  </ioread> 
        <!-- * covariance at end -->
  <ioread 
    version="[-14]" 
    sourceClass="recob::Track"
    source="std::vector<TMatrixD> fCov"
    targetClass="recob::Track"
    target="fCovEnd"
    include="lardataobj/RecoBase/Track.h;TMatrixD.h">
    <![CDATA[
      if (onfile.fCov.size() == 2) {
        // we copy the upper triangle only
        for (unsigned int i = 0; i < 5; ++i) {
          for (unsigned int j = i; j < 5; ++j) {
            fCovEnd(i,j)    = onfile.fCov[1](i,j);
          } // for j
        } // for i
      } // if
    ]]>
  </ioread> 
  
  <!-- recob::SpacePoint: schema evolution rules -->
      <!-- version 13 -->
        <!-- * fXYZ -->
  <ioread
    version="[12]"
    sourceClass="recob::SpacePoint"
    source="double fXYZ[3];"
    targetClass="recob::SpacePoint"
    target="fXYZ">
    <![CDATA[
	 for (size_t i=0;i<3;++i) fXYZ[i] = Double32_t(onfile.fXYZ[i]);
    ]]>
  </ioread>
        <!-- * fErrXYZ -->
  <ioread
    version="[12]"
    sourceClass="recob::SpacePoint"
    source="double fErrXYZ[6];"
    targetClass="recob::SpacePoint"
    target="fErrXYZ">
    <![CDATA[
	 for (size_t i=0;i<6;++i) fErrXYZ[i] = Double32_t(onfile.fErrXYZ[i]);
    ]]>
  </ioread>
        <!-- * fChisq -->
  <ioread
    version="[12]"
    sourceClass="recob::SpacePoint"
    source="double fChisq;"
    targetClass="recob::SpacePoint"
    target="fChisq">
    <![CDATA[
	 fChisq = Double32_t(onfile.fChisq);
    ]]>
  </ioread>

  <!-- recob::Vertex: schema evolution rules -->
      <!-- version 15 -->
  <ioread
    version="[14]"
    sourceClass="recob::Vertex"
    source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::GlobalCoordinateSystemTag> pos_;"
    targetClass="recob::Vertex"
    target="pos_"
    include="lardataobj/RecoBase/Vertex.h"
    >
    <![CDATA[
	 pos_ = recob::tracking::Point_t(onfile.pos_.X(), onfile.pos_.Y(), onfile.pos_.Z());
    ]]>
  </ioread>
  <ioread
    version="[13-14]"
    sourceClass="recob::Vertex"
    source="ROOT::Math::SMatrix<double,3,3,ROOT::Math::MatRepSym<double,3> > cov_;"
    targetClass="recob::Vertex"
    target="cov_"
    include="lardataobj/RecoBase/Vertex.h"
    >
    <![CDATA[
       for (size_t i=0; i<3; ++i)
         for (size_t j=0; j<3; ++j)
	   cov_(i,j) = onfile.cov_(i,j);
    ]]>
  </ioread>

      <!-- version 14 -->
        <!-- * position -->
  <ioread
    version="[13]"
    sourceClass="recob::Vertex"
    source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> pos_;"
    targetClass="recob::Vertex"
    target="pos_"
    include="lardataobj/RecoBase/Vertex.h"
    >
    <![CDATA[
	 pos_ = recob::tracking::Point_t(onfile.pos_.X(), onfile.pos_.Y(), onfile.pos_.Z());
    ]]>
  </ioread>
      <!-- version 13 -->
        <!-- * position -->
  <ioread
    version="[-12]"
    sourceClass="recob::Vertex"
    source="double fXYZ[3];"
    targetClass="recob::Vertex"
    target="pos_"
    include="lardataobj/RecoBase/Vertex.h">
    <![CDATA[
	 pos_ = recob::tracking::Point_t(onfile.fXYZ[0],onfile.fXYZ[1],onfile.fXYZ[2]);
    ]]>
  </ioread>
        <!-- * id -->
  <ioread
    version="[-12]"
    sourceClass="recob::Vertex"
    source="int fID;"
    targetClass="recob::Vertex"
    target="id_"
    include="lardataobj/RecoBase/Vertex.h">
    <![CDATA[
	 id_ = onfile.fID;
    ]]>
  </ioread>

  <!-- recob::Slice: schema evolution rules -->
      <!-- version 15 -->

        <!-- * fCenter -->
  <ioread
    version="[-14]"
    sourceClass="recob::Slice"
    source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> fCenter;"
    targetClass="recob::Slice"
    target="fCenter"
    include="lardataobj/RecoBase/Slice.h"
    >
    <![CDATA[
	 fCenter = recob::tracking::Point_t(onfile.fCenter.X(), onfile.fCenter.Y(), onfile.fCenter.Z());
    ]]>
  </ioread>

        <!-- * fEnd0Pos -->
  <ioread
    version="[-14]"
    sourceClass="recob::Slice"
    source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> fEnd0Pos;"
    targetClass="recob::Slice"
    target="fEnd0Pos"
    include="lardataobj/RecoBase/Slice.h"
    >
    <![CDATA[
	 fEnd0Pos = recob::tracking::Point_t(onfile.fEnd0Pos.X(), onfile.fEnd0Pos.Y(), onfile.fEnd0Pos.Z());
    ]]>
  </ioread>

        <!-- * fEnd1Pos -->
  <ioread
    version="[-14]"
    sourceClass="recob::Slice"
    source="ROOT::Math::PositionVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> fEnd1Pos;"
    targetClass="recob::Slice"
    target="fEnd1Pos"
    include="lardataobj/RecoBase/Slice.h"
    >
    <![CDATA[
	 fEnd1Pos = recob::tracking::Point_t(onfile.fEnd1Pos.X(), onfile.fEnd1Pos.Y(), onfile.fEnd1Pos.Z());
    ]]>
  </ioread>

        <!-- * fDirection -->
  <ioread
    version="[-14]"
    sourceClass="recob::Slice"
    source="ROOT::Math::DisplacementVector3D<ROOT::Math::Cartesian3D<double>,ROOT::Math::DefaultCoordinateSystemTag> fDirection;"
    targetClass="recob::Slice"
    target="fDirection"
    include="lardataobj/RecoBase/Slice.h"
    >
    <![CDATA[
	 fDirection = recob::tracking::Vector_t(onfile.fDirection.X(), onfile.fDirection.Y(), onfile.fDirection.Z());
    ]]>
  </ioread>

  <!-- recob::TrackFitHitInfo: schema evolution rules -->
      <!-- version 11 -->

        <!-- * fHitMeas -->
  <ioread
    version="[10]"
    sourceClass="recob::TrackFitHitInfo"
    source="double fHitMeas;"
    targetClass="recob::TrackFitHitInfo"
    target="fHitMeas"
    include="lardataobj/RecoBase/TrackFitHitInfo.h"
    >
    <![CDATA[
	 fHitMeas = float(onfile.fHitMeas);
    ]]>
  </ioread>

        <!-- * fHitMeasErr2 -->
  <ioread
    version="[10]"
    sourceClass="recob::TrackFitHitInfo"
    source="double fHitMeasErr2;"
    targetClass="recob::TrackFitHitInfo"
    target="fHitMeasErr2"
    include="lardataobj/RecoBase/TrackFitHitInfo.h"
    >
    <![CDATA[
	 fHitMeasErr2 = float(onfile.fHitMeasErr2);
    ]]>
  </ioread>

        <!-- * fTrackStatePar -->
  <ioread
    version="[10]"
    sourceClass="recob::TrackFitHitInfo"
    source="ROOT::Math::SVector<double,5> fTrackStatePar;"
    targetClass="recob::TrackFitHitInfo"
    target="fTrackStatePar"
    include="lardataobj/RecoBase/TrackFitHitInfo.h"
    >
    <![CDATA[
       for (size_t i=0; i<5; ++i) fTrackStatePar(i) = onfile.fTrackStatePar(i);
    ]]>
  </ioread>

        <!-- * fTrackStateCov -->
  <ioread
    version="[10]"
    sourceClass="recob::TrackFitHitInfo"
    source="ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > fTrackStateCov;"
    targetClass="recob::TrackFitHitInfo"
    target="fTrackStateCov"
    include="lardataobj/RecoBase/TrackFitHitInfo.h"
    >
    <![CDATA[
       for (size_t i=0; i<5; ++i)
         for (size_t j=0; j<5; ++j)
	   fTrackStateCov(i,j) = onfile.fTrackStateCov(i,j);
    ]]>
  </ioread>
  
    <!-- art pointers and wrappers -->
  <class name="art::Ptr<recob::Track>" />
  <class name="std::vector<recob::Track>" />
  <class name="art::Wrapper<std::vector<recob::Track>>" />
  
  <class name="art::PtrVector<recob::Track>" />
  <class name="std::vector<art::PtrVector<recob::Track>>" />
  <class name="art::Wrapper<std::vector<art::PtrVector<recob::Track>>>" />
  
    <!-- associations and wrappers -->
      <!-- hits -->
  <class name="art::Assns<recob::Hit, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::Hit, void>" />
  <class name="std::pair<art::Ptr<recob::Hit>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::Hit, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::Hit>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Hit, void>>" />
      <!-- clusters -->
  <class name="art::Assns<recob::Cluster, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::Cluster, void>" />
  <class name="std::pair<art::Ptr<recob::Cluster>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::Cluster, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::Cluster>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Cluster, void>>" />
      <!-- showers -->
  <class name="art::Assns<recob::Shower, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::Shower, void>" />
  <class name="std::pair<art::Ptr<recob::Shower>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::Shower, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::Shower>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Shower, void>>" />
      <!-- vertex -->
  <class name="art::Assns<recob::Vertex, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::Vertex, void>" />
  <class name="std::pair<art::Ptr<recob::Vertex>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::Vertex, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::Vertex>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Vertex, void>>" />
      <!-- space point -->
  <class name="art::Assns<recob::SpacePoint, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::SpacePoint, void>" />
  <class name="std::pair<art::Ptr<recob::SpacePoint>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::SpacePoint, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::SpacePoint>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::SpacePoint, void>>" />
      <!-- particle flow -->
  <class name="art::Assns<recob::PFParticle, recob::Track, void>" />
  <class name="art::Assns<recob::Track, recob::PFParticle, void>" />
  <class name="std::pair<art::Ptr<recob::PFParticle>, art::Ptr<recob::Track>>" />
  <class name="art::Wrapper<art::Assns<recob::PFParticle, recob::Track, void>>" />
  <class name="std::pair<art::Ptr<recob::Track>, art::Ptr<recob::PFParticle>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::PFParticle, void>>" />
      <!-- optical flash -->
    <!-- in recob::OpFlash -->
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- recob::TrackHitMeta (metadata) -->
  
    <!--   class -->
  <class name="recob::TrackHitMeta" />

    <!-- art pointers and wrappers -->
  <class name="std::vector<recob::TrackHitMeta>" />
  <class name="art::Ptr<recob::TrackHitMeta>" />

    <!-- associations and wrappers -->
      <!-- Hits <==> Tracks -->
  <class name="art::Assns<recob::Hit, recob::Track, recob::TrackHitMeta>" />
  <class name="art::Assns<recob::Track, recob::Hit, recob::TrackHitMeta>" />
  <class name="art::Wrapper<art::Assns<recob::Hit, recob::Track, recob::TrackHitMeta>>" />
  <class name="art::Wrapper<art::Assns<recob::Track, recob::Hit, recob::TrackHitMeta>>" />

  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- recob::PointCharge -->
  
    <!--   class -->
  <class name="recob::PointCharge" ClassVersion="10" >
   <version ClassVersion="10" checksum="3152949279"/>
  </class>
  
    <!-- art pointers and wrappers -->
      <!-- data product collection (recob::PointCharge) -->
  <class name="art::Ptr<recob::PointCharge>" />
  <class name="std::vector<recob::PointCharge>" />
  <class name="art::Wrapper<std::vector<recob::PointCharge>>" />
      
    <!-- associations and wrappers (recob::PointCharge <==> OTHER) -->
  <!--
  <class name="art::Assns<recob::PointCharge, OTHER, void>" />
  <class name="art::Assns<OTHER, recob::PointCharge, void>" />
  <class name="std::pair<art::Ptr<recob::PointCharge>, art::Ptr<OTHER>>" />
  <class name="art::Wrapper<art::Assns<OTHER, recob::PointCharge, void>>" />
  <class name="std::pair<art::Ptr<OTHER>, art::Ptr<recob::PointCharge>>" />
  <class name="art::Wrapper<art::Assns<OTHER, recob::PointCharge, void>>" />
    -->
  
  
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- copy&paste templates for: -->
  <!-- PROD -->
  
    <!--   class -->
  <!--
  <class name="PROD" />
  -->
  
    <!-- art pointers and wrappers -->
      <!-- data product collection (PROD) -->
  <!--
  <class name="art::Ptr<PROD>" />
  <class name="std::vector<PROD>" />
  <class name="art::Wrapper<std::vector<PROD>>" />
    -->
      
    <!-- associations and wrappers (PROD <==> OTHER) -->
  <!--
  <class name="art::Assns<PROD, OTHER, void>" />
  <class name="art::Assns<OTHER, PROD, void>" />
  <class name="std::pair<art::Ptr<PROD>, art::Ptr<OTHER>>" />
  <class name="art::Wrapper<art::Assns<OTHER, PROD, void>>" />
  <class name="std::pair<art::Ptr<OTHER>, art::Ptr<PROD>>" />
  <class name="art::Wrapper<art::Assns<OTHER, PROD, void>>" />
    -->
  
  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  
<!-- /lcgdict  FIXME uncomment when moving to classes_def_tracking.xml -->
  <!-- END OF classes_def_tracking.xml CONTENT -->
  


</lcgdict>
